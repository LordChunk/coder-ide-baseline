name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
    paths:
      - "root-container/**"
      - ".github/workflows/root-container.yml"
  schedule:
    - cron: "0 0 * * 0"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      ## Setup environment variables
      - name: Set branch name as Docker image tag
        shell: bash
        run: echo "TAG_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Replace master or main branch with latest tag
        if: env.TAG_NAME == 'main' || env.TAG_NAME == 'master'
        shell: bash
        run: echo "TAG_NAME=latest" >> $GITHUB_ENV

      - name: Set tag to release name if release event
        if: github.event_name == 'release'
        shell: bash
        run: echo "TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Store repo name and owner in lower case
        shell: bash
        run: echo "LOWER_CASE_REPO_NAME=$(echo ${GITHUB_REPOSITORY} | tr /A-Z/ /a-z/)" >> $GITHUB_ENV

      ## Configure, build and push docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/arm64,linux/amd64
          context: ./root-container
          # Only releases or pushes to development or main branch
          push: ${{ github.event_name == 'release' || env.TAG_NAME == 'development' || env.TAG_NAME == 'latest' }}
          tags: ghcr.io/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}
          # Use GitHub Actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
  update-template:
    needs: docker
    name: Update template
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Coder CLI
        run: curl -fsSL https://coder.com/install.sh | sh
      - name: Authenticate with Coder
        run: coder login ${{ secrets.CODER_URL }} --token ${{ secrets.CODER_TOKEN }}
      - name: Get hash of latest IDE image 
        run: "DOCKER_IMAGE_HASH=$(docker inspect ghcr.io/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }} --format='{{index .RepoDigests 0}}' | cut -d : -f 2) && echo DOCKER_IMAGE_HASH=$DOCKER_IMAGE_HASH >> $GITHUB_ENV"
      - run: cd template
      - name: Replace all "ghcr.io/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}" with "ghcr.io/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}@${{ env.DOCKER_IMAGE_HASH }}" in main.tf
        run: sed -i "s/ghcr.io\/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}/ghcr.io\/${{ env.LOWER_CASE_REPO_NAME }}:${{ env.TAG_NAME }}@${{ env.DOCKER_IMAGE_HASH }}/g" main.tf
      - name: Push template changes to Coder
        run: ./update.sh
        
